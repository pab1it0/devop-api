if("object"!=typeof StorylaneUtils)var StorylaneUtils={isBuffer:function(t){return t&&t.constructor&&"function"==typeof t.constructor.isBuffer&&t.constructor.isBuffer(t)},keyIdentity:function(t){return t},flatten:function(t,e){const n=(e=e||{}).delimiter||".",s=e.maxDepth,a=e.transformKey||StorylaneUtils.keyIdentity,i={};return function t(l,r,c){c=c||1,Object.keys(l).forEach((function(o){const g=l[o],d=e.safe&&Array.isArray(g),p=Object.prototype.toString.call(g),_=StorylaneUtils.isBuffer(g),u="[object Object]"===p||"[object Array]"===p,m=r?r+n+a(o):a(o);if(!d&&!_&&u&&Object.keys(g).length&&(!e.maxDepth||c<s))return t(g,m,c+1);i[m]=g}))}(t),i}};if("object"!=typeof StorylaneAnalytics){var sl_ga=!1,sl_amplitude=!1,sl_segment=!1,StorylaneAnalytics={GA:function(t){let e=t;e.event="sl_"+e.event;let n=StorylaneUtils.flatten(e,{delimiter:"_"});"ga4"===sl_ga?window.sl_gtag("event",e.event,n):"gtag"===sl_ga&&window.gtag("event",e.event,n)},AMPLITUDE:function(t){let e=t;e.event="sl_"+e.event;let n=StorylaneUtils.flatten(e,{delimiter:"_"});window.amplitude.logEvent(e.event,n)},SEGMENT:function(t){let e=t;e.event="sl_"+e.event;let n=StorylaneUtils.flatten(e,{delimiter:"_"});window.analytics.track(e.event,n)}},sl_script=document.querySelector('script[src*="storylane.js"]');if(sl_script){const t=sl_script.getAttribute("measurement-id")||sl_script.getAttribute("data-measurement-id"),e=sl_script.getAttribute("amplitude-id")||sl_script.getAttribute("data-amplitude-id"),n=sl_script.getAttribute("segment-id")||sl_script.getAttribute("data-segment-id");var sl_data_ga=sl_script.getAttribute("data-sl-ga");if(t){sl_ga="ga4";var sl_ga_script=document.createElement("script");sl_ga_script.setAttribute("async",""),sl_ga_script.setAttribute("src","https://www.googletagmanager.com/gtag/js?id="+t),document.head.appendChild(sl_ga_script);var sl_ga_gtag=document.createElement("script"),sl_ga_gtag_script=`\n        window.dataLayer = window.dataLayer || [];\n        function sl_gtag(){dataLayer.push(arguments);}\n        sl_gtag('js', new Date());\n        sl_gtag('config', '${t}');\n      `;sl_ga_gtag.innerHTML=sl_ga_gtag_script,document.head.appendChild(sl_ga_gtag),console.log("Syncing Storylane Events using ga4")}else"true"===sl_data_ga&&window.gtag&&(sl_ga="gtag",console.log("Syncing Storylane Events using gtag"));if(e){var sl_amplitude_script=document.createElement("script");sl_amplitude_script.setAttribute("type","module"),sl_amplitude_script.setAttribute("async",""),sl_amplitude_script.innerHTML=`\n        import * as amplitudeanalyticsBrowser from 'https://cdn.jsdelivr.net/npm/@amplitude/analytics-browser@2.3.8/+esm'\n\n        amplitudeanalyticsBrowser.init("${e}",{\n          defaultTracking:false\n        });\n\n        window.amplitude=amplitudeanalyticsBrowser;\n      `,sl_amplitude=!0,document.body.appendChild(sl_amplitude_script),console.log("Syncing Storylane Events using Amplitude")}if(n){var sl_segment_script=document.createElement("script");sl_segment_script.setAttribute("type","module"),sl_segment_script.setAttribute("async",""),sl_segment_script.innerHTML=`\n        import { AnalyticsBrowser } from 'https://cdn.jsdelivr.net/npm/@segment/analytics-next@1.63.0/+esm'\n\n        const analytics = AnalyticsBrowser.load({\n          writeKey: '${n}',\n        })\n\n        window.analytics=analytics;\n      `,sl_segment=!0,document.body.appendChild(sl_segment_script)}}else console.log("Script not found for Storylane Events!");window.addEventListener("message",(t=>{try{"storylane-demo-event"===t.data.message&&(sl_ga&&StorylaneAnalytics.GA(t.data.payload),sl_amplitude&&StorylaneAnalytics.AMPLITUDE(t.data.payload),sl_segment&&StorylaneAnalytics.SEGMENT(t.data.payload))}catch(t){console.error(t)}}))}